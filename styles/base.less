@import "syntax-variables";

atom-text-editor {
  background-color: @background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @light-gray;
    // Curve selection rectangle
    border-radius: 3.75px;
    // Two shadows offset to left and right to
    // nicely pad selected text
    box-shadow: -1.6px 0 0 0px @light-gray,
                 1.6px 0 0 0px @light-gray;
    opacity: 0.35;
  }
}

atom-text-editor .search-results .syntax--marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.syntax--comment {
  color: @light-gray;
}

.syntax--keyword {
  color: @light-green;

  &.syntax--control {
    color: @light-green;
  }

  &.syntax--operator {
    color: @white-text-color;
  }

  &.syntax--other.syntax--special-method {
    color: @yellow;
  }

  &.syntax--other.syntax--unit {
    color: @yellow;
  }
}

.syntax--storage {
  color: @yellow;

  // For `var`/`let`/`const` declarations
  &.syntax--js {
    color: @light-green;
  }

  // Actual storage modifiers, e.g. "final"
  &.syntax--modifier {
    color: @dark-green;

    // `async`
    &.syntax--js {
      color: @light-green;
    }
  }

  &.syntax--function {
    // py `def`, js `function`
    color: @light-green;

    &.syntax--arrow {
      color: @white-text-color;
    }
  }

  // *, and & before function parameters in Ruby
  // def self.start(*args, &block)
  &.syntax--type.syntax--variable.syntax--ruby {
      color: @light-green;
  }

  // `class` keyword, PHP, Python
  &.syntax--type.syntax--class {
      color: @light-green;
  }
}

.syntax--todo {
  color: @blue;
}

.syntax--fixme {
  .syntax--todo;
}

.syntax--variable {
  color: @syntax-text-color;

  &.syntax--interpolation {
    color: @orange;
  }

  &.syntax--parameter.syntax--function {
    color: @orange;
  }
}

.syntax--constant {
  color: @dark-green;

  &.syntax--character.syntax--escape {
    color: @light-green;
  }

  &.syntax--numeric {
    color: @yellow;
  }

  &.syntax--other {
    &.syntax--color,
    &.syntax--symbol {
      color: @blue;
    }

    // Dereferenced variables: const { x, y } = point;
    &.syntax--js {
      color: @white-text-color;
    }
  }

  // python interpolation
  &.syntax--other.syntax--placeholder {
    color: @light-green;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @blue;
  color: @syntax-text-color;
}

.syntax--string {
  color: @orange;

  &.syntax--regexp {
    color: @orange;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @blue;
  }
}

.syntax--punctuation {

  &.syntax--definition {
    &.syntax--comment {
      color: @light-gray;
    }

    &.syntax--string{
      color: @orange
    }

    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--bold {
      color: @syntax-text-color;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @syntax-text-color;
      font-style: italic;
    }

    &.syntax--tag {
      color: @dark-green;

      &.syntax--begin.syntax--jsp, &.syntax--end.syntax--jsp {
        color: @orange;
      }
    }
  }

  &.syntax--section {
    color: @syntax-text-color;

    &.syntax--embedded.syntax--jsp {
      color: @orange;
    }

    // Ruby interpolation
    &.syntax--embedded {
      color: @light-green;
    }
  }

  // Ruby's inheritance operator `<`
  &.syntax--separator {
    color: @light-green;
  }
}

.syntax--support {
  &.syntax--class {
    color: @dark-green;
  }

  &.syntax--function  {
    color: @yellow;

    &.syntax--any-method {
      color: @light-green;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @white-text-color;

    &.syntax--mustache {
      color: @syntax-text-color;
    }

    // Python, `@property`
    &.syntax--decorator {
      color: @yellow;
    }
  }

  &.syntax--name.syntax--class,
  // class declarations, Java, Ruby, PHP, Python
  &.syntax--name.syntax--type.syntax--class {
    color: @yellow;
  }

  &.syntax--name.syntax--section {
    color: @syntax-text-color;
  }

  &.syntax--name.syntax--tag {
    color: @dark-green;
  }

  &.syntax--other.syntax--attribute-name {
    color: @light-green;

    &.syntax--html{
      color: @yellow;
    }
  }

  &.syntax--name.syntax--type {
    color: @yellow;
  }

  &.syntax--other.syntax--inherited-class {
    color: @yellow;
  }
}

.syntax--meta {
  &.syntax--class {
    color: @syntax-text-color;
  }

  &.syntax--link {
    color: @blue;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @orange;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @yellow;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @git-gutter-orange;
  }

  &.syntax--deleted {
    color: @git-gutter-red;
  }

  &.syntax--italic {
    color: @yellow;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @dark-green;
  }

  &.syntax--inserted {
    color: @git-gutter-green;
  }

  &.syntax--list {
    color: @syntax-text-color;
  }

  &.syntax--quote {
    color: @blue;
  }

  &.syntax--raw.syntax--inline {
    color: @orange;
  }
}

.syntax--language {
  // `this`
  &.syntax--variable {
    color: @light-green;
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @dark-green;
  }
}

.syntax--source {
  .syntax--method-call .syntax--function {
    color: @light-green;
  }

  // class methods like componentDidMount, render
  .syntax--method.syntax--definition .syntax--function {
    color: @yellow;
  }
}

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}

.syntax--git-config {
  &.syntax--value-pair.section-item {
    .syntax--support.syntax--constant {
      color: @syntax-text-color;
    }
    .syntax--punctuation.syntax--separator.syntax--key-value {
      color: @light-green;
    }
  }

  &.syntax--entity.syntax--name.syntax--section.syntax--section.syntax--git-config {
    color: @light-green;
  }

  &.syntax--entity.syntax--name.syntax--section.syntax--subsection.syntax--git-config {
    color: @orange;
  }

  &.syntax--punctuation.syntax--section.syntax--git-config {
    color: @orange;
  }
}
