@import "syntax-variables";

atom-text-editor, :host {
  background-color: @bg-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @light-gray;
    // Curve selection rectangle
    border-radius: 3.75px;
    // Two shadows offset to left and right to
    // nicely pad selected text
    box-shadow: -1.6px 0 0 0px @light-gray,
                 1.6px 0 0 0px @light-gray;
    opacity: 0.35;
  }
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.comment {
  color: @light-gray;
}

.keyword {
  color: @light-green;

  &.control {
    color: @light-green;
  }

  &.operator {
    color: @light-green;
  }

  &.other.special-method {
    color: @yellow;
  }

  &.other.unit {
    color: @yellow;
  }
}

.storage {
  color: @yellow;

  // Actual storage modifiers, e.g. "final"
  &.modifier {
    color: @dark-green;

    // For `var` declarations
    &.js {
      color: @light-green;
    }
  }

  &.function {
    // `function`
    &.js,
    // `def`
    &.python {
      color: @light-green;
    }
  }

  // *, and & before function parameters in Ruby
  // def self.start(*args, &block)
  &.type.variable.ruby {
      color: @light-green;
  }

  // `class` keyword, PHP, Python
  &.type.class {
      color: @light-green;
  }
}

.todo {
  color: @blue;
}

.fixme {
  .todo;
}

.variable {
  color: @syntax-text-color;

  &.interpolation {
    color: @orange;
  }

  &.parameter.function {
    color: @orange;
  }
}

.constant {
  color: @dark-green;

  &.character.escape {
    color: @light-green;
  }

  &.numeric {
    color: @yellow;
  }

  &.other.color {
    color: @blue;
  }

  &.other.symbol {
    color: @blue;
  }

  // python interpolation
  &.other.placeholder {
    color: @light-green;
  }
}

.invalid.illegal {
  background-color: @blue;
  color: @syntax-text-color;
}

.string {
  color: @orange;

  &.regexp {
    color: @orange;

    .source.ruby.embedded {
      color: @orange;
    }
  }

  &.other.link {
    color: @blue;
  }
}

.punctuation {

  &.definition {
    &.comment {
      color: @light-gray;
    }

    &.string{
      color: @orange
    }

    &.variable,
    &.parameters,
    &.array {
      color: @syntax-text-color;
    }

    &.heading,
    &.identity {
      color: @blue;
    }

    &.bold {
      color: @syntax-text-color;
      font-weight: bold;
    }

    &.italic {
      color: @syntax-text-color;
      font-style: italic;
    }

    &.tag {
      color: @dark-green;

      &.begin.jsp, &.end.jsp {
        color: @orange;
      }
    }
  }

  &.section {
    color: @syntax-text-color;

    &.embedded.jsp {
      color: @orange;
    }

    // Ruby interpolation
    &.embedded {
      color: @light-green;
    }
  }

  // Ruby's inheritance operator `<`
  &.separator {
    color: @light-green;
  }
}

.support {
  &.class {
    color: @dark-green;
  }

  &.function  {
    color: @yellow;

    &.any-method {
      color: @light-green;
    }
  }
}

.entity {
  &.name.function {
    color: @light-green;

    &.mustache {
      color: @syntax-text-color;
    }

    // Python, `@property`
    &.decorator {
      color: @yellow;
    }
  }

  &.name.class,
  // class declarations, Java, Ruby, PHP, Python
  &.name.type.class {
    color: @yellow;
  }

  &.name.section {
    color: @syntax-text-color;
  }

  &.name.tag {
    color: @dark-green;
  }

  &.other.attribute-name {
    color: @light-green;

    &.html{
      color: @yellow;
    }
  }

  &.name.type {
    color: @yellow;
  }

  &.other.inherited-class {
    color: @yellow;
  }
}

.meta {
  &.class {
    color: @syntax-text-color;
  }

  &.link {
    color: @blue;
  }

  &.require {
    color: @blue;
  }

  &.selector {
    color: @orange;
  }

  &.separator {
    background-color: @gray;
    color: @syntax-text-color;
  }

  &.delimiter {
    &.period {
      color: @light-green;
    }
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  &.bold {
    color: @yellow;
    font-weight: bold;
  }

  &.changed {
    color: @gg-orange;
  }

  &.deleted {
    color: @gg-red;
  }

  &.italic {
    color: @yellow;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @dark-green;
  }

  &.inserted {
    color: @gg-green;
  }

  &.list {
    color: @syntax-text-color;
  }

  &.quote {
    color: @blue;
  }

  &.raw.inline {
    color: @orange;
  }
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @dark-green;
  }
}

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}

.git-config {
  &.value-pair.section-item {
    .support.constant {
      color: @syntax-text-color;
    }
    .punctuation.separator.key-value {
      color: @light-green;
    }
  }

  &.entity.name.section.section.git-config {
    color: @light-green;
  }

  &.entity.name.section.subsection.git-config {
    color: @orange;
  }

  &.punctuation.section.git-config {
    color: @orange;
  }
}
